aes(x= CreditScoreAverage,
y=BorrowerRate)) +
geom_jitter(alpha=0.1) +
geom_smooth() +
coord_cartesian(xlim = c(450, 900))
ggplot(loanData,
aes(x= ProsperScore,
y=BorrowerRate)) +
geom_jitter(alpha=0.1) +
geom_smooth()
ggplot(loanData,
aes(x= LoanStatusGeneral,
y=CreditScoreAverage)) +
geom_boxplot()
ggplot(loanData,
aes(x= BorrowerRate,
y=EstimatedReturn)) +
geom_jitter(alpha=0.1) +
geom_smooth()
ggplot(subset(loanData, ListingYear > 2005),
aes(x= ListingYear,
y=BorrowerRate)) +
geom_boxplot() +
stat_summary(fun.y = "median",
geom = 'line',
group = 1,
size = 1,
color = 'red')
ggplot(subset(loanData, ListingYear > 2005),
aes(x= ListingYear,
y=LoanOriginalAmount)) +
geom_boxplot() +
stat_summary(fun.y = "median",
geom = 'line',
group = 1,
size = 1,
color = 'green')
ggplot(loanData,
aes(x=ListingYear,
y=LP_InterestandFees)) +
stat_summary(fun.y = sum,
geom = "bar")
#install.packages('ggalt')
library(ggalt)
ggplot(loanData, aes(x=StatedMonthlyIncome,
y=LoanOriginalAmount,
color=LoanStatusGeneral)) +
geom_jitter(alpha = 0.05) +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Loan Status',
override.aes = list(alpha = 1,
size = 2)),
direction = -1) +
coord_cartesian(xlim = c(0, 30000),
ylim = c(0, max(loanData$LoanOriginalAmount))) +
geom_encircle()
ggplot(subset(loanData, EmploymentStatus != ''),
aes(x=StatedMonthlyIncome,
y=LoanOriginalAmount,
color=EmploymentStatus)) +
geom_jitter(alpha = 0.05) +
scale_color_brewer(type = 'div',
palette = 4,
guide = guide_legend(title = 'Employment Status',
override.aes = list(alpha = 1,
size = 2)),
direction = -1) +
#geom_smooth() +
coord_cartesian(xlim = c(0,30000),
ylim = c(0,max(loanData$LoanOriginalAmount)))
ggplot(subset(loanData, EmploymentStatus %in% c('Full-time',
'Part-time',
'Self-employed')),
aes(x=StatedMonthlyIncome,
y=LoanOriginalAmount,
color=EmploymentStatus)) +
geom_jitter(alpha = 0.1) +
scale_color_brewer(type = 'qual',
#palette = 1,
guide = guide_legend(title = 'Employment Status',
override.aes = list(alpha = 1,
size = 2)),
direction = -1) +
#geom_smooth() +
coord_cartesian(xlim = c(0,30000),
ylim = c(0,max(loanData$LoanOriginalAmount)))
ggplot(subset(loanData, EmploymentStatus != ''),
aes(x=EmploymentStatus,
y=LoanStatusGeneral)) +
geom_jitter(alpha = 0.1) +
facet_wrap(~ListingYear) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(loanData,
aes(x= CreditScoreAverage,
y=BorrowerRate)) +
geom_jitter(alpha=0.1, aes(color = LoanOriginalAmount)) +
scale_colour_gradientn(colours=rainbow(4)) +
geom_smooth() +
coord_cartesian(xlim=c(500,850)) +
facet_wrap(~ListingYear)
loanData$IncomeRange <- ordered(loanData$IncomeRange,
levels=c("Not displayed",
"Not employed",
"$0", "$1-24,999",
"$25,000-49,999",
"$50,000-74,999",
"$75,000-99,999",
"$100,000+"))
ggplot(loanData,
aes(x=ListingYear,
y=LP_InterestandFees/1000000,
fill = IncomeRange)) +
scale_fill_brewer('div',
palette = 2,
guide = guide_legend(title = 'Income Range')) +
stat_summary(fun.y = sum,
geom = "bar",
position = 'stack')
br_m1 <- lm(BorrowerRate ~ ProsperScore, data = loanData)
br_m2 <- update(br_m1, ~ . + CreditScoreAverage)
br_m3 <- update(br_m2, ~ . + ListingYear)
mtable(br_m1, br_m2, br_m3, sdigits = 3)
library(mmisc)
library(memisc)
br_m1 <- lm(BorrowerRate ~ ProsperScore, data = loanData)
br_m2 <- update(br_m1, ~ . + CreditScoreAverage)
br_m3 <- update(br_m2, ~ . + ListingYear)
mtable(br_m1, br_m2, br_m3, sdigits = 3)
cor_matric <- cor(loanData[ , c('StatedMonthlyIncome',
'CreditScoreAverage',
'ProsperScore',
'BorrowerRate',
'EstimatedReturn',
'OpenCreditLines',
'TotalCreditLinespast7years',
'InquiriesLast6Months',
'CurrentDelinquencies',
'LoanOriginalAmount',
'DebtToIncomeRatio'
)],
use="complete.obs")
ggcorrplot(cor_matric,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
title="Correlogram of quantitative loanData variables",
legend.title = "Correlation",
ggtheme=theme_bw)
ggplot(subset(loanData, ListingYear > 2005),
aes(x= CreditScoreAverage,
y=BorrowerRate/10)) +
geom_jitter(alpha=0.1, aes(color = LoanOriginalAmount)) +
scale_colour_gradientn(colours=rainbow(4),
name = 'Loan Amount ($)') +
geom_smooth() +
coord_cartesian(xlim=c(500,850)) +
facet_wrap(~ListingYear) +
ggtitle("Borrower Rate by Credit Score,
showing loan amount, faceted by year") +
labs(x="Average Credit Score", y= "Borrower Interest Rate") +
scale_y_continuous(labels = scales::percent) +
guides(fill=guide_legend(title="Loan Amount"))
ggplot(subset(loanData, ListingYear > 2005),
aes(x=ListingYear,
y=LP_InterestandFees/1000000,
fill = IncomeRange)) +
scale_fill_brewer('div',
palette = 2,
guide = guide_legend(title = "Borrower Income Range")) +
stat_summary(fun.y = sum,
geom = "bar",
position = 'stack') +
ggtitle("Interest and Fees income by Year,
split by borrower's income range") +
labs(x="Listing Year", y= "Interest and Fees (millions)") +
scale_y_continuous(label=dollar_format())
ggplot(subset(loanData, ListingYear > 2005),
aes(x=ListingYear,
y=LP_InterestandFees/1000000,
fill = IncomeRange)) +
scale_fill_brewer('div',
palette = 2,
guide = guide_legend(title = "Borrower Income Range")) +
stat_summary(fun.y = sum,
geom = "bar",
position = 'stack') +
ggtitle("Interest and Fees income by Year,
split by borrower's income range") +
labs(x="Listing Year", y= "Interest and Fees (millions)") +
scale_y_continuous(label=dollar_format())
library(ggplot2)
ggplot(subset(loanData, ListingYear > 2005),
aes(x=ListingYear,
y=LP_InterestandFees/1000000,
fill = IncomeRange)) +
scale_fill_brewer('div',
palette = 2,
guide = guide_legend(title = "Borrower Income Range")) +
stat_summary(fun.y = sum,
geom = "bar",
position = 'stack') +
ggtitle("Interest and Fees income by Year,
split by borrower's income range") +
labs(x="Listing Year", y= "Interest and Fees (millions)") +
scale_y_continuous(label=dollar_format())
?dollar_format
ggplot(subset(loanData, ListingYear > 2005),
aes(x=ListingYear,
y=LP_InterestandFees/1000000,
fill = IncomeRange)) +
scale_fill_brewer('div',
palette = 2,
guide = guide_legend(title = "Borrower Income Range")) +
stat_summary(fun.y = sum,
geom = "bar",
position = 'stack') +
ggtitle("Interest and Fees income by Year,
split by borrower's income range") +
labs(x="Listing Year", y= "Interest and Fees (millions)") +
scale_y_continuous(label= dollar_format())
library(scales)
ggplot(subset(loanData, ListingYear > 2005),
aes(x=ListingYear,
y=LP_InterestandFees/1000000,
fill = IncomeRange)) +
scale_fill_brewer('div',
palette = 2,
guide = guide_legend(title = "Borrower Income Range")) +
stat_summary(fun.y = sum,
geom = "bar",
position = 'stack') +
ggtitle("Interest and Fees income by Year,
split by borrower's income range") +
labs(x="Listing Year", y= "Interest and Fees (millions)") +
scale_y_continuous(label= dollar_format())
knit_with_parameters('~/Documents/Comp Sci and Programming Learning/Udacity/DAND/Exploratory_Data_Analysis/eda-course-materials/final_project/Final_EDA_Project.Rmd')
ggplot(subset(loanData, ListingYear > 2005),
aes(x= CreditScoreAverage,
y=BorrowerRate/10)) +
geom_jitter(alpha=0.1, aes(color = LoanOriginalAmount)) +
scale_colour_gradientn(colours=rainbow(4),
name = 'Loan Amount ($)') +
geom_smooth() +
coord_cartesian(xlim=c(500,850)) +
facet_wrap(~ListingYear) +
ggtitle("Borrower Rate by Credit Score,
showing loan amount, faceted by year") +
labs(x="Average Credit Score", y= "Borrower Interest Rate") +
scale_y_continuous(labels = scales::percent) +
guides(fill=guide_legend(title="Loan Amount"))
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot() +
coord_flip(ylim= c(0, 30000))
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot() +
coord_flip(ylim= c(0, 30000)) +
theme(axis.text.x=element_text(size=8))
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot() +
coord_flip(ylim= c(0, 30000)) +
theme(axis.text.x=element_text(size=3))
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot() +
coord_flip(ylim= c(0, 30000)) +
theme(axis.text.y=element_text(size=8))
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot() +
coord_flip(ylim= c(0, 30000)) +
theme(axis.text.y=element_text(size=5))
#median(loanData$StatedMonthlyIncome[loanData$Occupation == 'Analyst'])
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot(aes(position=position_dodge(1))) +
coord_flip(ylim= c(0, 30000))
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot(position=position_dodge(1)) +
coord_flip(ylim= c(0, 30000))
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot(position=position_dodge(2)) +
coord_flip(ylim= c(0, 30000))
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot(position=position_dodge(3)) +
coord_flip(ylim= c(0, 30000))
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot(position=position_dodge(40)) +
coord_flip(ylim= c(0, 30000))
?position_dodge
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot() +
coord_flip(ylim= c(0, 30000)) +
theme(axis.text.y=element_text(size=5))
#Focusing only on verifiable incomes, which represent more than 90% of the data.
ggplot(subset(loanData, IncomeVerifiable = 'True'),
aes(x= reorder(Occupation,
StatedMonthlyIncome,
FUN=median),
y=StatedMonthlyIncome)) +
geom_boxplot() +
coord_flip(ylim= c(0, 30000)) +
theme(axis.text.y=element_text(size=6))
ggplot(subset(loanData, EmploymentStatus != ''),
aes(x=EmploymentStatus,
y=LoanStatusGeneral)) +
geom_jitter(alpha = 0.1) +
facet_wrap(~ListingYear) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(subset(loanData, EmploymentStatus != ''),
aes(x=EmploymentStatus,
y=LoanStatusGeneral)) +
geom_jitter(alpha = 0.1) +
facet_wrap(~ListingYear) +
theme(axis.text.x = element_text(angle = 90))
ggplot(subset(loanData, EmploymentStatus != ''),
aes(x=EmploymentStatus,
y=LoanStatusGeneral)) +
geom_jitter(alpha = 0.1) +
facet_wrap(~ListingYear) +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
ggplot(subset(loanData, EmploymentStatus != ''),
aes(x=EmploymentStatus,
y=LoanStatusGeneral)) +
geom_jitter(alpha = 0.1) +
facet_wrap(~ListingYear) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(loanData,
aes(x=EmploymentStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(loanData$EmploymentStatus)
ggplot(loanData,
aes(x=EmploymentStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(loanData,
aes(x=LoanStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(loanData,
aes(x=LoanStatusGeneral)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(loanData,
aes(x= LoanStatusGeneral,
y=CreditScoreAverage)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(loanData, aes(x=StatedMonthlyIncome,
y=LoanOriginalAmount,
color=LoanStatusGeneral)) +
geom_jitter(alpha = 0.05) +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Loan Status',
override.aes = list(alpha = 1,
size = 2)),
direction = -1) +
coord_cartesian(xlim = c(0, 30000),
ylim = c(0, max(loanData$LoanOriginalAmount))) +
geom_encircle()
ggplot(loanData, aes(x=StatedMonthlyIncome,
y=LoanOriginalAmount,
color=LoanStatusGeneral)) +
geom_jitter(alpha = 0.05) +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Loan Status',
override.aes = list(alpha = 1,
size = 2)),
direction = -1) +
coord_cartesian(xlim = c(0, 30000),
ylim = c(0, max(loanData$LoanOriginalAmount))) +
geom_encircle() +
theme_dark()
ggplot(subset(loanData, EmploymentStatus != ''),
aes(x=StatedMonthlyIncome,
y=LoanOriginalAmount,
color=EmploymentStatus)) +
geom_jitter(alpha = 0.05) +
scale_color_brewer(type = 'div',
palette = 4,
guide = guide_legend(title = 'Employment Status',
override.aes = list(alpha = 1,
size = 2)),
direction = -1) +
#geom_smooth() +
coord_cartesian(xlim = c(0,30000),
ylim = c(0,max(loanData$LoanOriginalAmount)))
ggplot(subset(loanData, EmploymentStatus %in% c('Full-time',
'Part-time',
'Self-employed')),
aes(x=StatedMonthlyIncome,
y=LoanOriginalAmount,
color=EmploymentStatus)) +
geom_jitter(alpha = 0.1) +
scale_color_brewer(type = 'qual',
#palette = 1,
guide = guide_legend(title = 'Employment Status',
override.aes = list(alpha = 1,
size = 2)),
direction = -1) +
#geom_smooth() +
coord_cartesian(xlim = c(0,30000),
ylim = c(0,max(loanData$LoanOriginalAmount)))
ggplot(subset(loanData, EmploymentStatus %in% c('Full-time',
'Part-time',
'Self-employed')),
aes(x=StatedMonthlyIncome,
y=LoanOriginalAmount,
color=EmploymentStatus)) +
geom_jitter(alpha = 0.1) +
scale_color_brewer(type = 'qual',
#palette = 1,
guide = guide_legend(title = 'Employment Status',
override.aes = list(alpha = 1,
size = 2)),
direction = -1) +
#geom_smooth() +
coord_cartesian(xlim = c(0,30000),
ylim = c(0,max(loanData$LoanOriginalAmount))) +
theme_dark()
ggplot(subset(loanData, EmploymentStatus != ''),
aes(x=EmploymentStatus,
y=LoanStatusGeneral)) +
geom_jitter(alpha = 0.1) +
facet_wrap(~ListingYear) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(loanData,
aes(x= CreditScoreAverage,
y=BorrowerRate)) +
geom_jitter(alpha=0.1, aes(color = LoanOriginalAmount)) +
scale_colour_gradientn(colours=rainbow(4)) +
geom_smooth() +
coord_cartesian(xlim=c(500,850)) +
facet_wrap(~ListingYear)
ggplot(subset(loanData, IncomeRange != "Not displayed"),
aes(x=ListingYear,
y=LP_InterestandFees/1000000,
fill = IncomeRange)) +
scale_fill_brewer('div',
palette = 2,
guide = guide_legend(title = 'Income Range')) +
stat_summary(fun.y = sum,
geom = "bar",
position = 'stack')
ggplot(subset(loanData, IncomeRange != "Not displayed"),
aes(x=ListingYear,
y=LP_InterestandFees/1000000,
fill = IncomeRange)) +
scale_fill_brewer('div',
palette = 2,
guide = guide_legend(title = "Borrower Income Range")) +
stat_summary(fun.y = sum,
geom = "bar",
position = 'stack') +
ggtitle("Interest and Fees income by Year,
split by borrower's income range") +
labs(x="Listing Year", y= "Interest and Fees (millions)") +
scale_y_continuous(label= dollar_format())
