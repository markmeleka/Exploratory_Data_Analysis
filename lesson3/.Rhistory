pf <- read.csv("/Users/markmeleka/Documents/Comp Sci and Programming Learning/Udacity/DAND/Exploratory_Data_Analysis/eda-course-materials/lesson3/pseudo_facebook.tsv", sep = "\t")
setwd("/Users/markmeleka/Documents/Comp Sci and Programming Learning/Udacity/DAND/Exploratory_Data_Analysis/eda-course-materials/lesson4")
cor.test(pf$age, pg$friend_count)
cor.test(pf$age, pf$friend_count)
?cor.test
#OR using with()
with(pf, cor.test(age, friend_count))
with(subset(pf, pf$age < 70), cor.test(age, friend_count))
with(subset(pf, age <= 70), cor.test(age, friend_count))
x=4
y=exp(4)
?exp
exp(1);
exp(2);
2.71^2;
log(exp(2))
log(exp(10))
exp(10)
?log
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_plot()
library(ggplot2)
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_plot()
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point()
1e+05
summary(pf$www_likes_received)
??inter quartile range
??"interquartile"
??"third quartile"
??"quartile"
?quantile
quantile(pf$www_likes_received)
quantile(pf$www_likes_received, probs=0.75)
quantile(pf$www_likes_received, probs=0.75) *2
coord_trans(x=c(0, www_upper_quartile+1.5*(IQR(www_likes_recieved)))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_trans(x=c(0, www_upper_quartile+1.5*(IQR(www_likes_recieved))))
www_upper_quartile = quantile(pf$www_likes_received, probs=0.75)
likes_upper_quartile = quantile(pf$likes_received, probs=0.75)
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_trans(x=c(0, www_upper_quartile+1.5*(IQR(www_likes_recieved))))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_trans(x=c(0, www_upper_quartile+1.5*(IQR(pf$www_likes_recieved))))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_trans(x=c(0, 100)) #www_upper_quartile+1.5*(IQR(pf$www_likes_recieved))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=c(0, 100)) #www_upper_quartile+1.5*(IQR(pf$www_likes_recieved))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=c(0, www_upper_quartile+1.5*(IQR(pf$www_likes_recieved)))) #www_upper_quartile+1.5*(IQR(pf$www_likes_recieved))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=c(0, (www_upper_quartile+1.5*(IQR(pf$www_likes_recieved))))) #www_upper_quartile+1.5*(IQR(pf$www_likes_recieved))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=c(0, 100), ylim=c(0,100)) #www_upper_quartile+1.5*(IQR(pf$www_likes_recieved))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=c(0, 100), ylim=c(0,1000)) #www_upper_quartile+1.5*(IQR(pf$www_likes_recieved))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=c(0, 1000), ylim=c(0,1000)) #www_upper_quartile+1.5*(IQR(pf$www_likes_recieved))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=c(0, 100000), ylim=c(0,100000)) #www_upper_quartile+1.5*(IQR(pf$www_likes_recieved))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=c(0, 50000), ylim=c(0,100000)) #www_upper_quartile+1.5*(IQR(pf$www_likes_recieved))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=50000, ylim=100000)
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=c(0, quantile(pf$www_likes_received, probs=0.95)), ylim=c(0,quantile(pf$likes_received, probs=0.95)))
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=c(0, quantile(pf$www_likes_received, probs=0.95)),
ylim=c(0,quantile(pf$likes_received, probs=0.95))) +
geom_smooth(method='lm')
ggplot(aes(x=www_likes_received, y=likes_received), data=pf) +
geom_point() +
coord_cartesian(xlim=c(0, quantile(pf$www_likes_received, probs=0.95)),
ylim=c(0,quantile(pf$likes_received, probs=0.95))) +
geom_smooth(method='lm', color = 'red')
cor.test(pf$www_likes_received, pf$likes_received)
cor.test(pf$www_likes_received, pf$likes_received)
install.packages('alr3')
install.packages('alr3')
library(alr3)
data("Mitchell")
mitchell = data("Mitchell")
summary(mitchell)
mitchell = data(Mitchell)
summary(mitchell)
?Mitchell
head(Mitchell)
mitchell = data(Mitchell)
h
mitchell = data(Mitchell)
head(mitchell)
head(Mitchell)
ggplot(aes(x=month, y=temp), data=Mitchell) +
geom_point()
ggplot(aes(x=Month, y=Temp), data=Mitchell) +
geom_point()
ggplot(aes(x=Month, y=Temp), data=Mitchell) +
geom_point() +
geom_smooth()
corr.test(Mitchel$month, Mitchell$temp)
cor.test(Mitchel$month, Mitchell$temp)
cor.test(Mitchell$month, Mitchell$temp)
cor.test(Mitchell$Month, Mitchell$Temp)
ggplot(aes(x=Month, y=Temp), data=Mitchell) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks=seq(0,100,12))
ggplot(aes(x=Month, y=Temp), data=Mitchell) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks=seq(0,200,12))
ggplot(aes(x=Month, y=Temp), data=Mitchell) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks=seq(0,203,12))
ggplot(aes(x=Month, y=Temp), data=Mitchell) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks=seq(0,203,12))
ggplot(aes(x=(Month%%12),y=Temp), data=Mitchell)+
geom_point()
ggplot(aes(x=(Month%%12),y=Temp), data=Mitchell)+
geom_point()
ggplot(aes(x=(Month%%12),y=Temp), data=Mitchell)+
geom_point() +
geom_smooth()
cor.test(Mitchell$Month, Mitchell$Temp)
dcor.ttest(Mitchell$Month, Mitchell$Temp)
library(energy)
install.packages(energy)
install.packages(energy)
install.packages('energy')
dcor.ttest(Mitchell$Month, Mitchell$Temp)
library(energy)
dcor.ttest(Mitchell$Month, Mitchell$Temp)
#testing example
x <- seq(0, 4*pi, pi/20)
y <- cos(x)
qplot(x = x, y = y)
qplot(x = x, y = y)
dcor.ttest(x, y)
pf <- read.csv("/Users/markmeleka/Documents/Comp Sci and Programming Learning/Udacity/DAND/Exploratory_Data_Analysis/eda-course-materials/lesson3/pseudo_facebook.tsv", sep = "\t")
setwd("/Users/markmeleka/Documents/Comp Sci and Programming Learning/Udacity/DAND/Exploratory_Data_Analysis/eda-course-materials/lesson4")
#an example
age_groups <- group_by(pf,age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
library(dplyr)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
#an example
age_groups <- group_by(pf,age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age, age)
ggplot(aes(x=age, y=friend_count_mean), data= pf.fc_by_age)
library(ggplot2)
```{r Understanding Noise: Age to Age Months}
ggplot(aes(x=age, y=friend_count_mean), data= pf.fc_by_age)
ggplot(aes(x=age, y=friend_count_mean), data= pf.fc_by_age) +
geom_line()
ggplot(aes(x=age, y=friend_count_mean), data= pf.fc_by_age) +
geom_line() +
geom_smooth()
head(pf$age)
head(pf$age, 20)
head(pf$month, 20)
head(pf$dob_month, 20)
#born jan. 20, 2000
2013-2000
12-1
(pf$age*12)+(12-pf$dob_month)
# Assume the reference date for calculating age is December 31, 2013.
pf$age_with_months <- (pf$age)+((12-pf$dob_month)/12)
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
ggplot(aes(x=age_with_months, y=friend_count_mean), data= pf.fc_by_age_months) +
geom_line()
ggplot(aes(x=age_with_months, y=friend_count_mean), data= pf.fc_by_age_months) +
geom_line() +
geom_smooth()
ggplot(aes(x=age_with_months, y=friend_count_mean), data= subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line() +
geom_smooth()
#load the ggplot package
library(ggplot2)
data(diamonds)
#load the ggplot package
library(ggplot2)
data(diamonds)
head(diamonds)
ggplot(aes(x=price, y=x), data=diamonds) +
geom_point()
ggplot(aes(x=x, y=price), data=diamonds) +
geom_point()
cor.test(diamonds$price, diamonds$x)
cor.test(diamonds$price, diamonds$)
cor.test(diamonds$price, diamonds$y)
cor.test(diamonds$price, diamonds$z)
ggplot(aes(x=depth, y=price), data=diamonds) +
geom_point()
ggplot(aes(x=depth, y=price), data=diamonds) +
geom_point(alpha=1/10)
ggplot(aes(x=depth, y=price), data=diamonds) +
geom_point(alpha=1/100)
ggplot(aes(x=depth, y=price), data=diamonds) +
geom_point(alpha=1/100) +
scale_x_continuous(breaks=seq(0,80,2))
cor.test(diamonds$price, diamonds$depth)
quantile(diamonds$carat, .99)
carat_upper_limit <- quantile(diamonds$carat, .99)
price_upper_limit <- quantile(diamonds$price, .99)
ggplot(aes(x=carat, y=price), data=subset(diamonds, carat < carat_upper_limit OR price < price_upper_limit) +
ggplot(aes(x=carat, y=price), data=subset(diamonds, carat < carat_upper_limit || price < price_upper_limit) +
geom_smooth()
ggplot(aes(x=carat, y=price), data=subset(diamonds, carat < carat_upper_limit || price < price_upper_limit)) +
geom_smooth()
ggplot(aes(x=depth, y=price), data=diamonds) +
geom_point(alpha=1/100) +
scale_x_continuous(breaks=seq(0,80,2))
ggplot(aes(x=carat, y=price), data=subset(diamonds, carat < carat_upper_limit || price < price_upper_limit)) +
geom_smooth()
ggplot(aes(x=carat, y=price), data=subset(diamonds, carat < carat_upper_limit || price < price_upper_limit)) +
geom_point()
# Create a scatterplot of price vs. volume (x * y * z).
(diamonds$x * diamonds$y * diamonds$z)
# Create a scatterplot of price vs. volume (x * y * z).
diamonds$volume <- (diamonds$x * diamonds$y * diamonds$z)
ggplot(aes(x=volume, y=price), data=diamonds) +
geom_point()
diamonds_no_outliers <- subset(diamonds, diamonds$volume > 0 && diamonds$volume <= 800)
cor.test(diamonds_no_outliers$price, diamonds_no_outliers$volume)
cor.test(diamonds$price, diamonds$volume)
?&&
diamonds_no_outliers <- subset(diamonds, diamonds$volume > 0 & diamonds$volume <= 800)
cor.test(diamonds$price, diamonds$volume)
cor.test(diamonds_no_outliers$price, diamonds_no_outliers$volume)
ggplot(aes(x= volume, y=price), data= diamonds_no_outliers) +
geom_point(alpha = 1/100)
ggplot(aes(x= volume, y=price), data= diamonds_no_outliers) +
geom_point(alpha = 1/100) +
geom_smooth()
ggplot(aes(x= volume, y=price), data= diamonds_no_outliers) +
geom_point(alpha = 1/100) +
geom_smooth() +
coord_cartesian(xlim=c(0,400))
ggplot(aes(x=volume, y=price), data=diamonds) +
geom_point()
ggplot(aes(x=volume, y=price), data=diamonds) +
geom_point(alpha=1/100)
ggplot(aes(x= volume, y=price), data= diamonds_no_outliers) +
geom_point(alpha = 1/100) +
geom_smooth() +
coord_cartesian(xlim=c(0,400))
ggplot(aes(x=volume, y=price), data=diamonds) +
geom_point(alpha=1/100) +
coord_cartesian(xlim=c(0,400))
library(dplyr)
min(diamonds$price)
diamondsByClarity <- summarise(diamonds,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
diamondsByClarity
?group_by
diamonds.priceByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(diamonds,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
diamonds.priceByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
diamonds.priceByClarity
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
A <- ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity)
A <- ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_bar()
A
A <- ggplot(aes(x=clarity), data=diamonds_mp_by_clarity) +
geom_bar()
A
A <- ggplot(aes(x=mean_price), data=diamonds_mp_by_clarity) +
geom_bar()
A
B <- ggplot(aes(x=color, y=mean_price), data=diamonds_mp_by_color) +
geom_bar()
grid.arrange(A, B)
package(gridExtra)
library(gridExtra)
grid.arrange(A, B)
grid.arrange(A, B)
?geom_bar
A <- ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_col()
B <- ggplot(aes(x=color, y=mean_price), data=diamonds_mp_by_color) +
geom_col()
library(gridExtra)
grid.arrange(A, B)
C <- ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_bar(stat='identity')
D <- ggplot(aes(x=color, y=mean_price), data=diamonds_mp_by_color) +
geom_bar(stat='identity')
grid.arrange(C, D)
grid.arrange(A, B)
C
grid.arrange(C, D)
C <- ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_bar(stat='identity')+ scale_x_discrete()
D <- ggplot(aes(x=color, y=mean_price), data=diamonds_mp_by_color) +
geom_bar(stat='identity')+ scale_x_discrete()
grid.arrange(C, D)
grid.arrange(A, B)
?diamonds
grid.arrange(A, B)
diamonds_by_cut <- group_by(diamonds, cut)
diamonds_mp_by_cut <- summarise(diamonds_by_cut, mean_price = mean(price))
C <- ggplot(aes(x=cut, y=mean_price), data=diamonds_mp_by_cut) +
geom_col()
grid.arrange(A, B, C)
internet_users <- read.csv('Internet user per 100.csv', stringsAsFactors=FALSE, sep=",",
header = T, row.names = 1, check.names = F)
internet_users <- read.csv('Internet_user_per_100.csv', stringsAsFactors=FALSE, sep=",",
header = T, row.names = 1, check.names = F)
internet_users <- read.csv('Internet_user_per_100.csv', stringsAsFactors=FALSE, sep=",",
header = T, row.names = 1, check.names = F)
setwd("/Users/markmeleka/Documents/Comp Sci and Programming Learning/Udacity/DAND/Exploratory_Data_Analysis/eda-course-materials/lesson3")
internet_users <- read.csv('Internet_user_per_100.csv', stringsAsFactors=FALSE, sep=",",
header = T, row.names = 1, check.names = F)
head(internet_users)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
pf <- read.delim('/Users/markmeleka/Documents/Comp\ Sci\ and\ Programming\ Learning/Udacity/DAND/Exploratory_Data_Analysis/eda-course-materials/lesson3/pseudo_facebook.tsv')
(library(dplyr))
library(dplyr)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
pf.fc_by_age_gender <-
pf.fc_by_age_gender <- pf %>%
mean_friend_count = mean(friend_count) %>%
median_friend_count = median(friend_count) %>%
n = n()
pf.fc_by_age_gender <- pf %>%
group_by(gender) %>%
mean_friend_count = mean(friend_count) %>%
median_friend_count = median(friend_count) %>%
n = n()
?group_by
pf.fc_by_age_gender <- pf %>%
group_by(pf, gender) %>%
mean_friend_count = mean(friend_count) %>%
median_friend_count = median(friend_count)
pf.fc_by_age_gender <- pf %>%
group_by(gender) %>%
mean_friend_count = mean(friend_count) %>%
median_friend_count = median(friend_count)
pf.fc_by_age_gender <- pf %>%
group_by(gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
head(pf.fc_by_age_gender)
pf.fc_by_age_gender <- pf %>%
group_by(age) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
group_by(gender)
pf.fc_by_age_gender <- pf %>%
group_by(age) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup()
head(pf.fc_by_age_gender)
pf.fc_by_age_gender <- pf %>%
group_by(age) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
group_by(gender)
pf.fc_by_age_gender <- pf %>%
group_by(age) %>%
summarise(gender = gender,
mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
group_by(gender)
pf.fc_by_age_gender <- pf %>%
group_by(age) %>%
summarise(gender = gender,
mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
pf.fc_by_age_gender <- pf %>%
group_by(age) %>%
summarise(gender,
mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
head(pf.fc_by_age_gender)
View(pf.fc_by_age_gender)
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup()
head(pf.fc_by_age_gender)
View(pf.fc_by_age_gender)
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
View(pf.fc_by_age_gender)
ggplot(aes(x=median_friend_count, y=age), data=pf.fc_by_age_gender) +
geom_line()
ggplot(aes(x=age, y=median_friend_count), data=pf.fc_by_age_gender) +
geom_line()
ggplot(aes(x=age, y=median_friend_count, color=gender),
ggplot(aes(x=age, y=median_friend_count, color=gender),
data=subset(pf.fc_by_age_gender, !is.na(gender))) +
geom_line()
ggplot(aes(x=age, y=median_friend_count, color=gender),
ggplot(aes(x=age, y=median_friend_count, color=gender),
data=subset(pf.fc_by_age_gender, !is.na(gender))) +
geom_line()
ggplot(aes(x=age, y=median_friend_count),
data= subset(subset(pf.fc_by_age_gender, !is.na(gender)))) +
geom_line(aes(color=gender))
ggplot(aes(x=age, y=median_friend_count),
data= subset(subset(pf.fc_by_age_gender, !is.na(gender)))) +
geom_line(aes(color=gender), stat='summary', fun.y=median)
ggplot(aes(x=age, y=median_friend_count),
data= subset(subset(pf.fc_by_age_gender, !is.na(gender)))) +
geom_line(aes(color=gender))
, stat='summary', fun.y=median
e
ggplot(aes(x=age, y=median_friend_count),
data= subset(subset(pf.fc_by_age_gender, !is.na(gender)))) +
geom_line(aes(color=gender), stat='summary', fun.y=median)
ggplot(aes(x=age, y=median_friend_count),
data= subset(subset(pf.fc_by_age_gender, !is.na(gender)))) +
geom_line(aes(color=gender))
ggplot(aes(x=age, y=median_friend_count, color=gender),
data=pf.fc_by_age_gender) +
geom_line()
ggplot(aes(x=age, y=median_friend_count),
data= pf.fc_by_age_gender) +
geom_line(aes(color=gender))
library(tidyr)
install.packages('reshape2')
library(reshape2)
install.packages('tidyr')
library(tidyr)
